{"version":3,"sources":["index/functions/pageTransitions.js","form/components/TextFieldAdapter.js","form/parsers/costParser.js","form/validators/csvValidator.js","gather-numbers/components/GatherNumbersForm.js","results/functions/getMean.js","results/functions/getStandardDeviation.js","results/components/EyeBallTable.js","results/components/Results.js","index/components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["createPageTransitions","setPage","next","back","isForm","page","undefined","isResult","TextFieldAdapter","_ref","input","meta","rest","Object","objectWithoutProperties","label","inputClass","passthrough","displayError","error","touched","react_default","a","createElement","className","htmlFor","name","assign","classNames","is-invalid","rows","id","costParser","cost","replace","trim","csvValidator","value","result","parse","skip_empty_lines","length","i","strippedCost","isNaN","GatherNumbersForm","setResults","onSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","values","csvInput","csv","results","wrap","_context","prev","map","index","key","parseFloat","stop","_x","apply","this","arguments","react_final_form_es","render","_ref3","handleSubmit","pristine","invalid","disabled","component","validate","type","btn-shadow","btn-outline-success","btn-block","btn-primary","react_fontawesome_index_es","icon","getMean","reduce","cur","getStandardDevation","mean","squaredDifferencesValues","Math","pow","squaredDifferenceMean","sqrt","EyeBallTable","scope","Results","_useState","useState","_useState2","slicedToArray","filteredResults","setFilteredResults","costs","meanCost","standardDeviation","getStandardDeviation","onChange","debounce","filterBounds","lowerBound","upperBound","newResults","filter","Fragment","Slider_default","min","max","step","components_EyeBallTable","MainPage","_useState3","_useState4","_createPageTransition","components_GatherNumbersForm","components_Results","App","components_MainPage","Component","Boolean","window","location","hostname","match","library","add","faEye","faSearch","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f88d374.chunk.js","sourcesContent":["const createPageTransitions = setPage => {\n  const FORM = \"FORM\";\n  const RESULT = \"RESULT\";\n\n  const next = () => setPage(RESULT);\n  const back = () => setPage(FORM);\n  const isForm = page => page === undefined || page === FORM;\n  const isResult = page => page === RESULT;\n\n  return { next, back, isForm, isResult };\n};\n\nexport default createPageTransitions;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst TextFieldAdapter = ({ input, meta, ...rest }) => {\n  const { label, inputClass, ...passthrough } = rest;\n  const displayError = meta.error && meta.touched;\n  return (\n    <div className=\"form-group\">\n      {label && <label htmlFor={input.name}>{label}</label>}\n      <textarea\n        {...input}\n        {...passthrough}\n        className={classNames(\"form-control\", inputClass, {\n          \"is-invalid\": displayError\n        })}\n        rows=\"10\"\n        id={input.name}\n      />\n      {displayError && <div className=\"invalid-feedback\">> {meta.error}</div>}\n    </div>\n  );\n};\n\nexport default TextFieldAdapter;\n","const costParser = cost => cost.replace(\"$\", \"\").trim();\n\nexport default costParser;\n","import parse from \"csv-parse/lib/sync\";\n\nimport costParser from \"../parsers/costParser\";\n\nconst csvValidator = value => {\n  if (value) {\n    try {\n      const result = parse(value, { skip_empty_lines: true });\n      if (result[0].length !== 2) {\n        return \"The instructions say two columns, dumbass\";\n      }\n\n      for (let i = 0; i < result.length; i++) {\n        const strippedCost = costParser(result[i][1]);\n        if (isNaN(strippedCost)) {\n          return \"Generally, cost is a number. This insight might just be the tipping point to turn your pathetic existence around. I doubt it.\";\n        }\n      }\n\n      if (result.length < 20) {\n        return \"Come on, you need like at least 20 rows to get a good eye balling\";\n      }\n    } catch (error) {\n      return \"Invalid CSV\";\n    }\n    return undefined;\n  }\n  return \"Required\";\n};\n\nexport default csvValidator;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Form, Field } from \"react-final-form\";\nimport className from \"classnames\";\nimport parse from \"csv-parse/lib/sync\";\n\nimport TextFieldAdapter from \"../../form/components/TextFieldAdapter\";\nimport csvValidator from \"../../form/validators/csvValidator\";\nimport costParser from \"../../form/parsers/costParser\";\n\nconst GatherNumbersForm = ({ next, setResults }) => {\n  const onSubmit = async values => {\n    const { csvInput } = values;\n    const csv = parse(csvInput, { skip_empty_lines: true });\n    const results = csv.map((value, index) => {\n      return {\n        key: index,\n        id: value[0],\n        cost: parseFloat(costParser(value[1]))\n      };\n    });\n    setResults(results);\n    next();\n  };\n  return (\n    <Form\n      onSubmit={onSubmit}\n      render={({ handleSubmit, pristine, invalid }) => {\n        const disabled = pristine || invalid;\n        return (\n          <form onSubmit={handleSubmit}>\n            <Field\n              name=\"csvInput\"\n              component={TextFieldAdapter}\n              validate={csvValidator}\n              label={\n                <span className=\"text-success\">\n                  Enter CSV as <span className=\"text-muted\">Id</span>,{\" \"}\n                  <span className=\"text-muted\">Cost</span>\n                </span>\n              }\n              inputClass=\"text-success\"\n            />\n            <div className=\"row justify-content-end\">\n              <div className=\"col-auto\">\n                <button\n                  disabled={disabled}\n                  type=\"submit\"\n                  className={className(\"btn  text-mono  btn-lg\", {\n                    \"btn-shadow\": !disabled,\n                    \"btn-outline-success\": !disabled,\n                    \"btn-block\": disabled,\n                    \"btn-primary\": disabled\n                  })}\n                >\n                  <FontAwesomeIcon icon=\"search\" /> Eye Ball It!\n                </button>\n              </div>\n            </div>\n          </form>\n        );\n      }}\n    />\n  );\n};\n\nexport default GatherNumbersForm;\n","const getMean = values =>\n  values.reduce((prev, cur) => {\n    return prev + cur;\n  }, 0) / values.length;\n\nexport default getMean;\n","import getMean from \"./getMean\";\nconst getStandardDevation = values => {\n  const mean = getMean(values);\n  const squaredDifferencesValues = values.map(value =>\n    Math.pow(value - mean, 2)\n  );\n  const squaredDifferenceMean = getMean(squaredDifferencesValues);\n  return Math.sqrt(squaredDifferenceMean / values.length);\n};\n\nexport default getStandardDevation;\n","import React from \"react\";\n\nconst EyeBallTable = ({ results }) => {\n  const rows = results.map(({ key, id, cost }) => {\n    return (\n      <tr key={key}>\n        <th scope=\"row\" className=\"text-center\">\n          <span className=\"text-success\">{id}</span>\n        </th>\n        <td className=\"text-right\">\n          <span className=\"text-success\">{cost}</span>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <table className=\"table table-sm\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th scope=\"col\" className=\"text-center\">\n            Id\n          </th>\n          <th scope=\"col\" className=\"text-right\">\n            Cost\n          </th>\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nexport default EyeBallTable;\n","import React, { useState } from \"react\";\nimport Slider from \"rc-slider/lib/Slider\";\nimport \"rc-slider/assets/index.css\";\nimport debounce from \"debounce\";\n\nimport \"../style/result.css\";\nimport getMean from \"../functions/getMean\";\nimport getStandardDeviation from \"../functions/getStandardDeviation\";\nimport EyeBallTable from \"./EyeBallTable\";\n\nconst Results = ({ back, results }) => {\n  const [filteredResults, setFilteredResults] = useState(results);\n  const costs = results.map(({ cost }) => cost);\n  const meanCost = getMean(costs);\n  const standardDeviation = getStandardDeviation(costs);\n  const onChange = debounce(\n    value => {\n      if (value === 0) {\n        setFilteredResults(results);\n      }\n      const inverseValue = value; //6 - value;\n      const filterBounds = inverseValue * standardDeviation;\n      const lowerBound = meanCost - filterBounds;\n      const upperBound = meanCost + filterBounds;\n\n      const newResults = results.filter(result => {\n        const { cost } = result;\n        return cost <= lowerBound || cost >= upperBound;\n      });\n      setFilteredResults(newResults);\n    },\n    100,\n    true\n  );\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <h3>Squint Level</h3>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-auto\">\n          <h4>Gritty</h4>\n        </div>\n        <div className=\"col\">\n          <Slider min={0} max={10} step={0.001} onChange={onChange} />\n        </div>\n        <div className=\"col-md-auto\">\n          <h4>Mr. Magoo</h4>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <EyeBallTable results={filteredResults} />\n      </div>\n      <div className=\"row justify-content-start\">\n        <div className=\"col-auto\">\n          <button className=\"btn  text-mono  btn-lg btn-outline-danger\">\n            Back\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\n\nimport createPageTransitions from \"../functions/pageTransitions\";\nimport GatherNumbersForm from \"../../gather-numbers/components/GatherNumbersForm\";\nimport Results from \"../../results/components/Results\";\n\nconst MainPage = () => {\n  const [page, setPage] = useState();\n  const [results, setResults] = useState([]);\n  const { next, back, isForm, isResult } = createPageTransitions(setPage);\n  return (\n    <React.Fragment>\n      {isForm(page) && (\n        <GatherNumbersForm next={next} setResults={setResults} />\n      )}\n      {isResult(page) && <Results back={back} results={results} />}\n    </React.Fragment>\n  );\n};\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MainPage from \"./index/components/MainPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-2\">\n          Simple Number Eye Baller{\" \"}\n          <span className=\"text-success\">\n            <FontAwesomeIcon icon={[\"far\", \"eye\"]} />\n          </span>\n        </h1>\n\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faEye } from \"@fortawesome/free-regular-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap\";\nimport \"./style/fonts.css\";\nimport \"./vendor/neon-glow/css/bootstrap4-neon-glow.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlibrary.add(faEye, faSearch);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}